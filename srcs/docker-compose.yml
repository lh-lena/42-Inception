services:
  
  # Database mariadb
  mariadb:
    build:
      context: requirements/mariadb
      dockerfile: Dockerfile
    image: mariadb
    container_name: mariadb
    restart: unless-stopped
    volumes:
      - v_mariadb:/var/lib/mysql
      # bind-mount any sql files that should be run while initializing
      # - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      # - ./init-scripts:/docker-entrypoint-initdb.d  # Mount initialization scripts
    env_file:
      - .env
    environment:
      MARIADB_ROOT_PASSWORD_FILE: db_root_password
      MARIADB_DATABASE: '${DATABASE_NAME}'
      MARIADB_USER: '${MYSQL_USER}'
      MARIADB_PASSWORD_FILE: db_password
    tty: true #docker start -i mariadb
    stdin_open: true
    secrets:
      - db_root_password
      - db_password
    networks:
      - inception

  # Wordpress
  wordpress:
    # to create mysql first
    depends_on:
      - mariadb
    build: 
      context: requirements/wordpress
      dockerfile: Dockerfile
    image: wordpress
    container_name: wordpress
    restart: unless-stopped
    volumes:
      - v_wordpress:/var/www/html
    expose:
      - "9000"
    env_file:
      - .env
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_NAME: '${DATABASE_NAME}'
      WORDPRESS_DB_USER:  '${MYSQL_USER}'
      WORDPRESS_DB_PASSWORD_FILE: db_password
      
    secrets:
       - db_root_password
       - db_password
    networks:
      - inception

  # Nginx Service
  nginx:
    depends_on:
      - wordpress
    build: 
      context: requirements/nginx/
      dockerfile: Dockerfile
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "443:443"
    env_file:
      - .env
    volumes:
      - v_wordpress:/var/www/html
    networks:
      - inception
  
  # GUI for mariadb
#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8080:8080
    # To use the CLI to access mariadb dir:
  # dokcer exec -it mariadb mysql --user=root --password=(password)
  # 

  # redis:
  #   image: redis
  #   container_name: redis
  #   ports:
  #     - '6379:6379'
  #   restart: always
  #   expose:
  #     - '6379'
      # in wp-config.php file.
# define('WP_REDIS_HOST', 'redis');
# define('WP_REDIS_PORT', '6379');

networks:
    # network name
    inception:
      # ip address management
      name: inception
      ipam:
        driver: default
          #        config:
          #- subnet: "192.168.92.0/24"
  # html-data:
volumes:
 v_wordpress:
   driver: local
   driver_opts:
    type: 'none'
    o: 'bind'
    device: '/home/ohladkov/data/wordpress'
 v_mariadb:
   driver: local
   driver_opts:
     type: 'none' 
     o: 'bind'
     device: '/home/ohladkov/data/mariadb'
secrets:
  db_password:
    file: ../secrets/db_password.txt
  db_root_password:
    file: ../secrets/db_root_password.txt


# https://docs.docker.com/compose/use-secrets/
# https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose

